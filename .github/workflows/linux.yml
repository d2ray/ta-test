name: Build Tauri App in linux.yml

on:
  push:
    branches: [ main ]
  workflow_dispatch:

permissions: write-all

env:
  XRAY_VERSION: v25.4.30

jobs:
  windows:
    strategy:
      fail-fast: false
      matrix:
        arch: [ x64, arm64 ]
        include:
          - arch: x64
            target: x86_64-pc-windows-msvc
            xray_zip: Xray-windows-64.zip
          - arch: arm64
            target: aarch64-pc-windows-msvc
            xray_zip: Xray-windows-arm64-v8a.zip

    runs-on: windows-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Get Dray version from package.json
        id: get_version
        shell: pwsh
        run: |
          $version = jq -r .version package.json
          echo "version=$version" >> $env:GITHUB_OUTPUT
          echo "Dray version is $version"

      - name: Setup pnpm and Install dependencies
        run: |
          npm install -g pnpm
          pnpm install

      - name: Download Xray
        shell: pwsh
        run: |
          $url = "https://github.com/XTLS/Xray-core/releases/download/${{ env.XRAY_VERSION }}/${{ matrix.xray_zip }}"
          Invoke-WebRequest -Uri $url -OutFile ${{ matrix.xray_zip }}
          New-Item -ItemType Directory -Force -Path src-tauri/ray | Out-Null
          Expand-Archive -Path ${{ matrix.xray_zip }} -DestinationPath src-tauri/ray -Force

      - name: List files in the Xray directory
        run: ls -R src-tauri/ray

      - name: Add Rust Target
        run: rustup target add ${{ matrix.target }}

      - name: Rust Cache
        uses: Swatinem/rust-cache@v2
        with:
          workspaces: src-tauri
          cache-all-crates: true
          cache-on-failure: true

      - name: Build Dray App
        run: pnpm run tauri build --target=${{ matrix.target }}

      - name: List files in the release bundle directory
        run: ls -R src-tauri/target/${{ matrix.target }}/release/bundle

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: dary-windows-${{ matrix.arch }}
          path: src-tauri/target/${{ matrix.target }}/release/bundle/*

      - name: Upload release
        uses: softprops/action-gh-release@v2
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          tag_name: v${{ steps.get_version.outputs.version }}
          files: |
            src-tauri/target/${{ matrix.target }}/release/bundle/nsis/*.exe

  macos:
    strategy:
      fail-fast: false
      matrix:
        arch: [ x64, arm64 ]
        include:
          - arch: x64
            target: x86_64-apple-darwin
            xray_zip: Xray-macos-64.zip
          - arch: arm64
            target: aarch64-apple-darwin
            xray_zip: Xray-macos-arm64-v8a.zip

    runs-on: macos-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Get Dray version from package.json
        id: get_version
        run: |
          version=$(jq -r .version package.json)
          echo "version=$version" >> "$GITHUB_OUTPUT"
          echo "Dray version is $version"

      - name: Setup pnpm and Install dependencies
        run: |
          npm install -g pnpm
          pnpm install

      - name: Download Xray
        shell: bash
        run: |
          URL="https://github.com/XTLS/Xray-core/releases/download/${{ env.XRAY_VERSION }}/${{ matrix.xray_zip }}"
          wget "$URL" -O "${{ matrix.xray_zip }}"
          mkdir -p src-tauri/ray
          unzip -o "${{ matrix.xray_zip }}" -d src-tauri/ray

      - name: List files in the Xray directory
        run: ls -R src-tauri/ray

      - name: Add Rust Target
        run: rustup target add ${{ matrix.target }}

      - name: Rust Cache
        uses: Swatinem/rust-cache@v2
        with:
          workspaces: src-tauri
          cache-all-crates: true
          cache-on-failure: true

      - name: Build Dray App
        run: pnpm run tauri build --target=${{ matrix.target }}

      - name: List files in the release bundle directory
        run: ls -R src-tauri/target/${{ matrix.target }}/release/bundle

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: dary-macos-${{ matrix.arch }}
          path: src-tauri/target/${{ matrix.target }}/release/bundle/*

      - name: Upload release
        uses: softprops/action-gh-release@v2
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          tag_name: v${{ steps.get_version.outputs.version }}
          files: |
            src-tauri/target/${{ matrix.target }}/release/bundle/dmg/*.dmg

  linux:
    strategy:
      fail-fast: false
      matrix:
        arch: [ x64 ]
        include:
          - arch: x64
            target: x86_64-unknown-linux-gnu
            xray_zip: Xray-linux-64.zip

    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Get Dray version from package.json
        id: get_version
        run: |
          version=$(jq -r .version package.json)
          echo "version=$version" >> "$GITHUB_OUTPUT"
          echo "Dray version is $version"

      - name: Setup pnpm and Install dependencies
        run: |
          npm install -g pnpm
          pnpm install

      - name: Download Xray
        shell: bash
        run: |
          URL="https://github.com/XTLS/Xray-core/releases/download/${{ env.XRAY_VERSION }}/${{ matrix.xray_zip }}"
          wget "$URL" -O "${{ matrix.xray_zip }}"
          mkdir -p src-tauri/ray
          unzip -o "${{ matrix.xray_zip }}" -d src-tauri/ray

      - name: List files in the Xray directory
        run: ls -R src-tauri/ray

      - name: Install dependencies on Linux
        run: |
          sudo apt update
          sudo apt install libwebkit2gtk-4.1-dev build-essential curl wget file libxdo-dev libssl-dev libayatana-appindicator3-dev librsvg2-dev

      - name: Add Rust Target
        run: rustup target add ${{ matrix.target }}

      - name: Rust Cache
        uses: Swatinem/rust-cache@v2
        with:
          workspaces: src-tauri
          cache-all-crates: true
          cache-on-failure: true

      - name: Build Dray App
        run: pnpm run tauri build --target=${{ matrix.target }}

      - name: List files in the release bundle directory
        run: ls -R src-tauri/target/${{ matrix.target }}/release/bundle

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: dary-linux-${{ matrix.arch }}
          path: src-tauri/target/${{ matrix.target }}/release/bundle/*

      - name: Upload Release
        uses: softprops/action-gh-release@v2
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          tag_name: v${{ steps.get_version.outputs.version }}
          files: |
            src-tauri/target/${{ matrix.target }}/release/bundle/deb/*.deb
            src-tauri/target/${{ matrix.target }}/release/bundle/rpm/*.rpm
