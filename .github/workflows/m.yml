name: Build Tauri App in m.yml

on:
  push:
    branches: [ main ]
  workflow_dispatch:

permissions: write-all

env:
  XRAY_VERSION: v25.4.30

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        os: [ macos, windows, linux ]
        arch: [ 64, arm64 ]
        exclude:
          - os: linux
            arch: arm64
        include:
          - os: macos
            arch: 64
            run_os: macos-latest
            target: x86_64-apple-darwin
            xray_zip: Xray-macos-64.zip
          - os: macos
            arch: arm64
            run_os: macos-latest
            target: aarch64-apple-darwin
            xray_zip: Xray-macos-arm64-v8a.zip
          - os: windows
            arch: 64
            run_os: windows-latest
            target: x86_64-pc-windows-msvc
            xray_zip: Xray-windows-64.zip
          - os: windows
            arch: arm64
            run_os: windows-latest
            target: aarch64-pc-windows-msvc
            xray_zip: Xray-windows-arm64-v8a.zip
          - os: linux
            arch: 64
            run_os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            xray_zip: Xray-linux-64.zip

    runs-on: ${{ matrix.run_os }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable

      - name: Add Rust Target
        run: rustup target add ${{ matrix.target }}

      - name: Cache Rust dependencies
        uses: Swatinem/rust-cache@v2
        with:
          workspaces: src-tauri
          cache-all-crates: true
          cache-on-failure: true

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22

      - name: Setup pnpm
        run: npm install -g pnpm

      - name: Pnpm Install dependencies
        run: pnpm install

      # PowerShell 设置变量（Windows）
      - name: Set file name and download URL (Windows)
        if: runner.os == 'Windows'
        shell: pwsh
        run: |
          $url = "https://github.com/XTLS/Xray-core/releases/download/${{ env.XRAY_VERSION }}/${{ matrix.xray_zip }}"
          Invoke-WebRequest -Uri $url -OutFile ${{ matrix.xray_zip }}

          New-Item -ItemType Directory -Force -Path src-tauri/ray | Out-Null
          Expand-Archive -Path ${{ matrix.xray_zip }} -DestinationPath src-tauri/ray -Force

      # Bash 设置变量（Linux/macOS）
      - name: Set file name and download URL (Unix)
        if: runner.os != 'Windows'
        shell: bash
        run: |
          URL="https://github.com/XTLS/Xray-core/releases/download/${{ env.XRAY_VERSION }}/${{ matrix.xray_zip }}"
          wget "$URL" -O "${{ matrix.xray_zip }}"

          mkdir -p src-tauri/ray/
          unzip -o "${{ matrix.xray_zip }}" -d src-tauri/ray

      - name: Install dependencies on Linux
        if: ${{ matrix.os == 'ubuntu-latest' }}
        run: |
          sudo apt update
          sudo apt install -y \
            pkg-config \
            build-essential \
            libxdo-dev \
            libssl-dev \
            libayatana-appindicator3-dev \
            librsvg2-dev \
            libwebkit2gtk-4.1-dev \
            libgtk-3-dev

      - name: List files in the Xray directory
        run: ls -R src-tauri/ray

      - name: Build Tauri App
        run: pnpm run tauri build --target=${{ matrix.target }}

      - name: List files in the release bundle directory  # Debug step
        run: ls -R src-tauri/target/${{ matrix.target }}/release/bundle/

      #      - name: Upload build artifacts
      #        uses: actions/upload-artifact@v4
      #        with:
      #          name: tauri-build-${{ matrix.platform }}-${{ matrix.architecture }}
      #          path: src-tauri/target/release/bundle/*

      - name: Create Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: v${{steps.build.outputs.appVersion}}
          name: "Dray v${{steps.build.outputs.appVersion}}"
          token: ${{ secrets.GITHUB_TOKEN }}
          files: |
            src-tauri/target/${{ matrix.target }}/release/bundle/*/dray_*
        env:
          GITHUB_TOKEN: ${{ secrets.RELEASE_TOKEN }}